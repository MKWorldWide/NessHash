name: Python CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/ai/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'setup.py'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/ai/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'setup.py'
      - '.github/workflows/python-ci.yml'
  workflow_dispatch:

permissions:
  contents: read
  # Required for codecov
  pull-requests: write
  issues: write

concurrency:
  group: python-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12']
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for codecov
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black isort flake8 mypy
        
    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --max-complexity=10 --max-line-length=100 --statistics
        
    - name: Check formatting with black
      run: black --check src/ tests/
      
    - name: Check import sorting with isort
      run: isort --check-only src/ tests/
      
    - name: Run type checking with mypy
      run: mypy src/ tests/
      
    - name: Run tests with coverage
      run: |
        PYTHONPATH=src pytest tests/ -v --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      # Only run on main branch or pull requests
      if: github.ref == 'refs/heads/main' || github.event.pull_request
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN || '' }}
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

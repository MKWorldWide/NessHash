version: '3.8'

services:
  app:
    build: .
    container_name: nesshash
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./data:/home/nesshash/app/data
      - ./config:/home/nesshash/app/config
    environment:
      - RUST_LOG=info
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  redis:
    image: redis:7-alpine
    container_name: nesshash-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis

  docs:
    build:
      context: .
      dockerfile: Dockerfile.docs
    container_name: nesshash-docs
    ports:
      - "8001:8000"
    volumes:
      - ./docs:/docs
    command: ["mkdocs", "serve", "--dev-addr=0.0.0.0:8000"]

volumes:
  redis_data:

# Git
.git
.gitignore

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
.venv
env/
venv/
ENV/
.python-version
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
.mypy_cache/

# Rust
/target/
**/*.rs.bk
Cargo.lock

# IDEs and Editors
.idea/
.vscode/
*.swp
*.swo
*~
.DS_Store

# Documentation
/site/

# Local development
.venv/
.venv*

# Logs
*.log

# Local development
.terraform/
.terraform.lock.hcl

# Project specific
/data/resonance_logbook/
/data/satellite_input/

# Docker
Dockerfile*
docker-compose*
.dockerignore

# Environment files
.env
.env.local
.env.development
.env.test
.env.production

# Pre-commit
.pre-commit-config.yaml

# CI
.github/

# Testing
htmlcov/
.coverage
.coverage.*
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# MkDocs
docs/site/

# Database
*.db
*.sqlite3

# Jupyter Notebook
.ipynb_checkpoints

# Virtual Environment
venv/
ENV/

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
